// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: schat/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgAuthEncrptyKey struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Key     string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (m *MsgAuthEncrptyKey) Reset()         { *m = MsgAuthEncrptyKey{} }
func (m *MsgAuthEncrptyKey) String() string { return proto.CompactTextString(m) }
func (*MsgAuthEncrptyKey) ProtoMessage()    {}
func (*MsgAuthEncrptyKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5e5c2496a0ba0af, []int{0}
}
func (m *MsgAuthEncrptyKey) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAuthEncrptyKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAuthEncrptyKey.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAuthEncrptyKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAuthEncrptyKey.Merge(m, src)
}
func (m *MsgAuthEncrptyKey) XXX_Size() int {
	return m.Size()
}
func (m *MsgAuthEncrptyKey) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAuthEncrptyKey.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAuthEncrptyKey proto.InternalMessageInfo

func (m *MsgAuthEncrptyKey) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAuthEncrptyKey) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type MsgAuthEncrptyKeyResponse struct {
	Success  bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	KeyTotal uint64 `protobuf:"varint,2,opt,name=keyTotal,proto3" json:"keyTotal,omitempty"`
}

func (m *MsgAuthEncrptyKeyResponse) Reset()         { *m = MsgAuthEncrptyKeyResponse{} }
func (m *MsgAuthEncrptyKeyResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAuthEncrptyKeyResponse) ProtoMessage()    {}
func (*MsgAuthEncrptyKeyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5e5c2496a0ba0af, []int{1}
}
func (m *MsgAuthEncrptyKeyResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAuthEncrptyKeyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAuthEncrptyKeyResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAuthEncrptyKeyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAuthEncrptyKeyResponse.Merge(m, src)
}
func (m *MsgAuthEncrptyKeyResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAuthEncrptyKeyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAuthEncrptyKeyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAuthEncrptyKeyResponse proto.InternalMessageInfo

func (m *MsgAuthEncrptyKeyResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *MsgAuthEncrptyKeyResponse) GetKeyTotal() uint64 {
	if m != nil {
		return m.KeyTotal
	}
	return 0
}

type MsgCreateConversation struct {
	Creator     string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Participant []string `protobuf:"bytes,2,rep,name=participant,proto3" json:"participant,omitempty"`
}

func (m *MsgCreateConversation) Reset()         { *m = MsgCreateConversation{} }
func (m *MsgCreateConversation) String() string { return proto.CompactTextString(m) }
func (*MsgCreateConversation) ProtoMessage()    {}
func (*MsgCreateConversation) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5e5c2496a0ba0af, []int{2}
}
func (m *MsgCreateConversation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateConversation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateConversation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateConversation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateConversation.Merge(m, src)
}
func (m *MsgCreateConversation) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateConversation) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateConversation.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateConversation proto.InternalMessageInfo

func (m *MsgCreateConversation) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateConversation) GetParticipant() []string {
	if m != nil {
		return m.Participant
	}
	return nil
}

type MsgCreateConversationResponse struct {
	HashParticipant string `protobuf:"bytes,1,opt,name=hashParticipant,proto3" json:"hashParticipant,omitempty"`
}

func (m *MsgCreateConversationResponse) Reset()         { *m = MsgCreateConversationResponse{} }
func (m *MsgCreateConversationResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateConversationResponse) ProtoMessage()    {}
func (*MsgCreateConversationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5e5c2496a0ba0af, []int{3}
}
func (m *MsgCreateConversationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateConversationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateConversationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateConversationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateConversationResponse.Merge(m, src)
}
func (m *MsgCreateConversationResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateConversationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateConversationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateConversationResponse proto.InternalMessageInfo

func (m *MsgCreateConversationResponse) GetHashParticipant() string {
	if m != nil {
		return m.HashParticipant
	}
	return ""
}

type MsgSendMessage struct {
	Creator         string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	HashParticipant string `protobuf:"bytes,2,opt,name=hashParticipant,proto3" json:"hashParticipant,omitempty"`
	Message         string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (m *MsgSendMessage) Reset()         { *m = MsgSendMessage{} }
func (m *MsgSendMessage) String() string { return proto.CompactTextString(m) }
func (*MsgSendMessage) ProtoMessage()    {}
func (*MsgSendMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5e5c2496a0ba0af, []int{4}
}
func (m *MsgSendMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSendMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSendMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSendMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSendMessage.Merge(m, src)
}
func (m *MsgSendMessage) XXX_Size() int {
	return m.Size()
}
func (m *MsgSendMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSendMessage.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSendMessage proto.InternalMessageInfo

func (m *MsgSendMessage) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSendMessage) GetHashParticipant() string {
	if m != nil {
		return m.HashParticipant
	}
	return ""
}

func (m *MsgSendMessage) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type MsgSendMessageResponse struct {
}

func (m *MsgSendMessageResponse) Reset()         { *m = MsgSendMessageResponse{} }
func (m *MsgSendMessageResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSendMessageResponse) ProtoMessage()    {}
func (*MsgSendMessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5e5c2496a0ba0af, []int{5}
}
func (m *MsgSendMessageResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSendMessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSendMessageResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSendMessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSendMessageResponse.Merge(m, src)
}
func (m *MsgSendMessageResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSendMessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSendMessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSendMessageResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgAuthEncrptyKey)(nil), "chengyu97.schat.schat.MsgAuthEncrptyKey")
	proto.RegisterType((*MsgAuthEncrptyKeyResponse)(nil), "chengyu97.schat.schat.MsgAuthEncrptyKeyResponse")
	proto.RegisterType((*MsgCreateConversation)(nil), "chengyu97.schat.schat.MsgCreateConversation")
	proto.RegisterType((*MsgCreateConversationResponse)(nil), "chengyu97.schat.schat.MsgCreateConversationResponse")
	proto.RegisterType((*MsgSendMessage)(nil), "chengyu97.schat.schat.MsgSendMessage")
	proto.RegisterType((*MsgSendMessageResponse)(nil), "chengyu97.schat.schat.MsgSendMessageResponse")
}

func init() { proto.RegisterFile("schat/tx.proto", fileDescriptor_d5e5c2496a0ba0af) }

var fileDescriptor_d5e5c2496a0ba0af = []byte{
	// 397 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0x41, 0x8b, 0x9b, 0x40,
	0x14, 0xc7, 0xa3, 0x96, 0x36, 0x79, 0x81, 0xb4, 0x15, 0x52, 0xac, 0x50, 0x09, 0x42, 0xc1, 0x43,
	0xab, 0xa5, 0x2d, 0x84, 0x9c, 0x4a, 0x23, 0x3d, 0x94, 0x22, 0xb4, 0xa6, 0x97, 0xf6, 0x36, 0x99,
	0x0e, 0x2a, 0x49, 0x66, 0xc4, 0x19, 0x4b, 0xfc, 0x16, 0xfb, 0xb1, 0xf6, 0x18, 0xf6, 0xb4, 0xc7,
	0x25, 0xf9, 0x22, 0x8b, 0x1a, 0xc5, 0x4d, 0x4c, 0xc8, 0x5e, 0xc4, 0xf7, 0xe6, 0xcf, 0xef, 0xff,
	0x78, 0x7f, 0x1e, 0x0c, 0x38, 0x0e, 0x91, 0x70, 0xc4, 0xda, 0x8e, 0x13, 0x26, 0x98, 0x3a, 0xc4,
	0x21, 0xa1, 0x41, 0x96, 0x4e, 0xc6, 0x76, 0xf1, 0x52, 0x7e, 0xcd, 0x2f, 0xf0, 0xd2, 0xe3, 0xc1,
	0xd7, 0x54, 0x84, 0xdf, 0x28, 0x4e, 0x62, 0x91, 0xfd, 0x20, 0x99, 0xaa, 0xc1, 0x33, 0x9c, 0x10,
	0x24, 0x58, 0xa2, 0x49, 0x23, 0xc9, 0xea, 0xf9, 0x55, 0xa9, 0xbe, 0x00, 0x65, 0x41, 0x32, 0x4d,
	0x2e, 0xba, 0xf9, 0xaf, 0xf9, 0x0b, 0x5e, 0x1f, 0x01, 0x7c, 0xc2, 0x63, 0x46, 0x39, 0xc9, 0x41,
	0x3c, 0xc5, 0x98, 0x70, 0x5e, 0x80, 0xba, 0x7e, 0x55, 0xaa, 0x3a, 0x74, 0x17, 0x24, 0xfb, 0xcd,
	0x04, 0x5a, 0x16, 0xb4, 0x27, 0x7e, 0x5d, 0x9b, 0x33, 0x18, 0x7a, 0x3c, 0x70, 0x73, 0x4b, 0xe2,
	0x32, 0xfa, 0x9f, 0x24, 0x1c, 0x89, 0x88, 0xd1, 0x33, 0x73, 0x8d, 0xa0, 0x1f, 0xa3, 0x44, 0x44,
	0x38, 0x8a, 0x11, 0x15, 0x9a, 0x3c, 0x52, 0xac, 0x9e, 0xdf, 0x6c, 0x99, 0xdf, 0xe1, 0x4d, 0x2b,
	0xb4, 0x9e, 0xd5, 0x82, 0xe7, 0x21, 0xe2, 0xe1, 0xcf, 0x06, 0xa6, 0x34, 0x39, 0x6c, 0x9b, 0x14,
	0x06, 0x1e, 0x0f, 0x66, 0x84, 0xfe, 0xf3, 0x08, 0xe7, 0x28, 0x20, 0x67, 0x06, 0x6b, 0xa1, 0xca,
	0xad, 0xd4, 0x9c, 0xb1, 0x2a, 0x71, 0x9a, 0x52, 0x32, 0xf6, 0xa5, 0xa9, 0xc1, 0xab, 0x87, 0x7e,
	0xd5, 0xcc, 0x1f, 0x6f, 0x64, 0x50, 0x3c, 0x1e, 0xa8, 0x4b, 0x18, 0x1c, 0x44, 0x68, 0xd9, 0xad,
	0x79, 0xdb, 0x47, 0x59, 0xe9, 0x1f, 0x2e, 0x55, 0xd6, 0x9b, 0x5a, 0x83, 0xda, 0x12, 0xce, 0xbb,
	0xd3, 0x9c, 0x63, 0xb5, 0xfe, 0xf9, 0x31, 0xea, 0xda, 0x19, 0x43, 0xbf, 0xb9, 0xf6, 0xb7, 0xa7,
	0x21, 0x0d, 0x99, 0xfe, 0xfe, 0x22, 0x59, 0x65, 0x32, 0x9d, 0x5e, 0x6f, 0x0d, 0x69, 0xb3, 0x35,
	0xa4, 0xbb, 0xad, 0x21, 0x5d, 0xed, 0x8c, 0xce, 0x66, 0x67, 0x74, 0x6e, 0x77, 0x46, 0xe7, 0xaf,
	0x15, 0x44, 0x22, 0x4c, 0xe7, 0x36, 0x66, 0x2b, 0xc7, 0xcd, 0x91, 0x7f, 0xd2, 0xc9, 0xd8, 0x99,
	0xb9, 0xf9, 0xa1, 0xad, 0x9d, 0xfd, 0xc1, 0x65, 0x31, 0xe1, 0xf3, 0xa7, 0xc5, 0xd1, 0x7d, 0xba,
	0x0f, 0x00, 0x00, 0xff, 0xff, 0x6b, 0x5e, 0x49, 0x20, 0x86, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	AuthEncrptyKey(ctx context.Context, in *MsgAuthEncrptyKey, opts ...grpc.CallOption) (*MsgAuthEncrptyKeyResponse, error)
	CreateConversation(ctx context.Context, in *MsgCreateConversation, opts ...grpc.CallOption) (*MsgCreateConversationResponse, error)
	SendMessage(ctx context.Context, in *MsgSendMessage, opts ...grpc.CallOption) (*MsgSendMessageResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) AuthEncrptyKey(ctx context.Context, in *MsgAuthEncrptyKey, opts ...grpc.CallOption) (*MsgAuthEncrptyKeyResponse, error) {
	out := new(MsgAuthEncrptyKeyResponse)
	err := c.cc.Invoke(ctx, "/chengyu97.schat.schat.Msg/AuthEncrptyKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateConversation(ctx context.Context, in *MsgCreateConversation, opts ...grpc.CallOption) (*MsgCreateConversationResponse, error) {
	out := new(MsgCreateConversationResponse)
	err := c.cc.Invoke(ctx, "/chengyu97.schat.schat.Msg/CreateConversation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SendMessage(ctx context.Context, in *MsgSendMessage, opts ...grpc.CallOption) (*MsgSendMessageResponse, error) {
	out := new(MsgSendMessageResponse)
	err := c.cc.Invoke(ctx, "/chengyu97.schat.schat.Msg/SendMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	AuthEncrptyKey(context.Context, *MsgAuthEncrptyKey) (*MsgAuthEncrptyKeyResponse, error)
	CreateConversation(context.Context, *MsgCreateConversation) (*MsgCreateConversationResponse, error)
	SendMessage(context.Context, *MsgSendMessage) (*MsgSendMessageResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) AuthEncrptyKey(ctx context.Context, req *MsgAuthEncrptyKey) (*MsgAuthEncrptyKeyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthEncrptyKey not implemented")
}
func (*UnimplementedMsgServer) CreateConversation(ctx context.Context, req *MsgCreateConversation) (*MsgCreateConversationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateConversation not implemented")
}
func (*UnimplementedMsgServer) SendMessage(ctx context.Context, req *MsgSendMessage) (*MsgSendMessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMessage not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_AuthEncrptyKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAuthEncrptyKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AuthEncrptyKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chengyu97.schat.schat.Msg/AuthEncrptyKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AuthEncrptyKey(ctx, req.(*MsgAuthEncrptyKey))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateConversation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateConversation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateConversation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chengyu97.schat.schat.Msg/CreateConversation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateConversation(ctx, req.(*MsgCreateConversation))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSendMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chengyu97.schat.schat.Msg/SendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SendMessage(ctx, req.(*MsgSendMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chengyu97.schat.schat.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AuthEncrptyKey",
			Handler:    _Msg_AuthEncrptyKey_Handler,
		},
		{
			MethodName: "CreateConversation",
			Handler:    _Msg_CreateConversation_Handler,
		},
		{
			MethodName: "SendMessage",
			Handler:    _Msg_SendMessage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "schat/tx.proto",
}

func (m *MsgAuthEncrptyKey) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAuthEncrptyKey) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAuthEncrptyKey) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Key) > 0 {
		i -= len(m.Key)
		copy(dAtA[i:], m.Key)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Key)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAuthEncrptyKeyResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAuthEncrptyKeyResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAuthEncrptyKeyResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.KeyTotal != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.KeyTotal))
		i--
		dAtA[i] = 0x10
	}
	if m.Success {
		i--
		if m.Success {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateConversation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateConversation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateConversation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Participant) > 0 {
		for iNdEx := len(m.Participant) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Participant[iNdEx])
			copy(dAtA[i:], m.Participant[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Participant[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateConversationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateConversationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateConversationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.HashParticipant) > 0 {
		i -= len(m.HashParticipant)
		copy(dAtA[i:], m.HashParticipant)
		i = encodeVarintTx(dAtA, i, uint64(len(m.HashParticipant)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSendMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSendMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSendMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.HashParticipant) > 0 {
		i -= len(m.HashParticipant)
		copy(dAtA[i:], m.HashParticipant)
		i = encodeVarintTx(dAtA, i, uint64(len(m.HashParticipant)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSendMessageResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSendMessageResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSendMessageResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgAuthEncrptyKey) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Key)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAuthEncrptyKeyResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Success {
		n += 2
	}
	if m.KeyTotal != 0 {
		n += 1 + sovTx(uint64(m.KeyTotal))
	}
	return n
}

func (m *MsgCreateConversation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Participant) > 0 {
		for _, s := range m.Participant {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgCreateConversationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.HashParticipant)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSendMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.HashParticipant)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSendMessageResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgAuthEncrptyKey) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAuthEncrptyKey: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAuthEncrptyKey: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Key = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAuthEncrptyKeyResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAuthEncrptyKeyResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAuthEncrptyKeyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Success", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Success = bool(v != 0)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field KeyTotal", wireType)
			}
			m.KeyTotal = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.KeyTotal |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateConversation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateConversation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateConversation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Participant", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Participant = append(m.Participant, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateConversationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateConversationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateConversationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HashParticipant", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HashParticipant = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSendMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSendMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSendMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HashParticipant", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HashParticipant = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSendMessageResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSendMessageResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSendMessageResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
